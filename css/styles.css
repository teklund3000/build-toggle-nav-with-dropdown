body {
    background-color: #818cf8;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'%3E%3Cg fill='%23f1f5f9' fill-opacity='0.26'%3E%3Cpath fill-rule='evenodd' d='M0 0h4v4H0V0zm4 4h4v4H4V4z'/%3E%3C/g%3E%3C/svg%3E");
    font-family: effra, sans-serif;
    font-weight: 300;
    font-style: normal;
}

.flex-container {
display: flex;
flex-flow: wrap;
justify-content: space-between;
align-items: center;
}

.inner-container {
    padding: 0 1rem;
}

/*  ********** global typography **********Ã¥ */
h1 {
    font-size: 1.125rem;
    line-height: 3.75rem;
}

h2 {
    font-family: effra, sans-serif;
    font-weight: 700;
    font-style: normal;
    text-align: center;
    padding-top: 3rem;
    color: peachpuff;
}


/*  ******* header ******* */
header {
    background-color: #f8fafc;
}
button {
    background-color:  #f8fafc;
    border: none;
}
svg {
    width: 1.25rem;
}
header a {
    text-decoration: none;
    color: #475569;
    font-size: 0.875rem;
}
h1 a {
    color: #dc2626;
}
nav {
    position: absolute;
    /*  with the change of position: absolute; it's no longer in the HTML layout.  = no longer flex item.
    flex: 1 0 100%; */
    background-color: #f8fafc;
    width: 98vw;
    top: 3.75rem;
    left: 0;
    visibility: hidden;
    opacity: 0;
    overflow: hidden;
}


/* special class that will show the button when it is clicked (do not add to the html). */
.show-nav {
visibility: visible;
opacity: 1;
overflow: visible;
}

.menu {
    line-height: 3.125rem;
}
.menu li {
    line-height: 3.125rem;
}
.menu a {
    display: flex;
    justify-content: space-between;
    padding: 0 0.5rem;
}
.menu a:hover {
    background-color: #e2e8f0;
}
.menu svg {
    width: 10px;
}

.submenu {
    visibility: hidden;
    opacity: 0;
    overflow: hidden;
    max-height: 0;
}

/* what do you hover over?  --> first selector + :hover
what do you want to change? --> second selector */
.menu li:hover > .submenu {
    visibility: visible;
    opacity: 1;
    overflow: visible;
    max-height: 225px;
}
/* this ^^ works to an extent, but the hover state has limitations.
a better way to develop a drop-down menu is with javascript. */

.menu li:focus-within > ul,
.menu li > ul:focus {
    visibility: visible;
    opacity: 1;
    overflow: visible;
    max-height: 225px;
    display: block;
}

@media screen and (min-width: 1100px) {
    .inner-container {
        padding: 0;
        width: 1000px;
        margin: 0 auto;
    }
    .button {
        display: none;
    }
    nav {
    position: unset;
    visibility: visible;
    opacity: 1;
    overflow: visible;
    width: unset;
    }
    .inner-container > a {
        order: 1;
    }
    .menu {
       display: flex;
       justify-content: space-between;
    }

    .submenu {
        background-color: #f8fafc;
        visibility: visible;
        opacity: 1;
        overflow: hidden;
        position: absolute;
    }
    .submenu a {
        display: block;
        text-align: center;
        padding: 0 2rem;
    }
}

/* TO DO: 
1) layout the 3 top level links horizontally, side by side. (done).
2) layout the submenu links as a dropdown for a wider screen. (done).
3) add focus, or keyboard focus, to the dropdown links. (as class - not done). 
*/